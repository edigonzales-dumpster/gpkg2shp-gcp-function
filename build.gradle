plugins {
    id 'java-library'
}

apply from: "$rootDir/gradle/versioning.gradle"

repositories {
    maven { 
        url "https://repo.osgeo.org/repository/release/" 
    }
    maven {
        url "http://maven.geo-solutions.it"
    }
    maven {
        url "http://jars.interlis.ch"
    }
    maven {
        url "https://dl.bintray.com/sogis/iox-wkf/"
    }
    jcenter()    
    mavenCentral()
}

configurations {
    invoker

    // TODO: Funktioniert nur ohne 'module' !?
    compile {
        exclude group: 'javax.media' //, module:'jai-core'
        exclude group: 'com.sun.media' //, module:'jai-codec'
    }
}

dependencies {
    compile 'ch.interlis:iox-wkf:1.1.20' 
    compile 'com.google.cloud.functions:functions-framework-api:1.0.1'
    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.0.0-beta1'
    
    testCompile 'junit:junit:4.13'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.3' 
    testCompile group: 'org.geotools', name: 'gt-shapefile', version: '23.1' 
    testCompile group: 'org.geotools', name: 'gt-epsg-hsql', version: '23.1'
}

tasks.register("runFunction", JavaExec) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args(
            '--target', project.findProperty('runFunction.target') ?: "ch.so.agi.functions.Gpkg2Shp",
            '--port', project.findProperty('runFunction.port') ?: 8080
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}
